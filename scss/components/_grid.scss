.container {
  @extend %width90;
  @media (min-width: 1000px) {
    width: 80%;
  }
}

.grid__row {
  margin: 0 auto;
  @extend %clearfix;
}

@media (min-width: 769px) {
  @for $i from 2 through $g-col-count {

    $context: g-context($g-col-width, $g-col-count, $g-gutter-width) !global;
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));
  // Generate column modifier classes
    .grid__col--#{$i} {
      width: percentage($target / $context);
    }
  }
}

// Column stlyes

[class^="grid__col--"] {
  @media (min-width: 1px) and (max-width: 768px) {
    margin-top: em(6px);
    margin-bottom: em(6px);
  }
  @media (min-width: 769px) {
    @include doubly(percentage($g-gutter-width / $context));
    float: left;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
  }
}

@each $theme, $color in $grid-colors {
  .theme__colors.grid__#{$theme} {
    background-color: $color;
    @extend %col;
  }
}
.centered {
  @media (min-width: 1000px) {
    float: none;
    margin: 0 auto;
  }
}

.card p,
.card .headline--secondary {
  @extend %card;
  @media (min-width: 100px) {
    width: 95%;
    margin: auto;
  }
}

.card p {
  @media (min-width: 1000px) {
    margin: em(50px) auto;
  }
}

.theme__colors.grid__col--12 {
  margin-top: em(20px);
  @extend %margbot40;
}

.grid__col--6 + .grid__col--6 {
  @extend %margbot40;
}

.grid__col--4 + .grid__col--4 + .grid__col--4 {
  @extend %margbot40;
}

.grid__col--3 + .grid__col--3 + .grid__col--3 + .grid__col--3 {
  @extend %margbot40;
}

.theme__colors.grid__col--7 {
  @extend %margbot40;
}

.grid__col--8 + .grid__col--4 {
  @extend %margbot40;
}
